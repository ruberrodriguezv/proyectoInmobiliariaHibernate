package com.inmobiliaria.model;
// Generated 4/03/2015 09:08:20 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name="usuario"
    ,catalog="inmobiliaria"
)
public class Usuario  implements java.io.Serializable {


     private Integer idUsuario;
     private Ciudad ciudad;
     private Departamento departamento;
     private Genero genero;
     private Roles roles;
     private String nombreUsuario;
     private String apellidoUsuario;
     private Date fechaNacimientoUsuario;
     private String direccionUsuario;
     private String barrioUsuario;
     private String telefonoUsuario;
     private String emailUsuario;
     private String userUsuario;
     private String contraseniaUsuario;
     private Set informacionPrincipals = new HashSet(0);

    public Usuario() {
    }

	
    public Usuario(Ciudad ciudad, Departamento departamento, Genero genero, Roles roles, String nombreUsuario, String apellidoUsuario, Date fechaNacimientoUsuario, String direccionUsuario, String barrioUsuario, String telefonoUsuario, String emailUsuario, String userUsuario, String contraseniaUsuario) {
        this.ciudad = ciudad;
        this.departamento = departamento;
        this.genero = genero;
        this.roles = roles;
        this.nombreUsuario = nombreUsuario;
        this.apellidoUsuario = apellidoUsuario;
        this.fechaNacimientoUsuario = fechaNacimientoUsuario;
        this.direccionUsuario = direccionUsuario;
        this.barrioUsuario = barrioUsuario;
        this.telefonoUsuario = telefonoUsuario;
        this.emailUsuario = emailUsuario;
        this.userUsuario = userUsuario;
        this.contraseniaUsuario = contraseniaUsuario;
    }
    public Usuario(Ciudad ciudad, Departamento departamento, Genero genero, Roles roles, String nombreUsuario, String apellidoUsuario, Date fechaNacimientoUsuario, String direccionUsuario, String barrioUsuario, String telefonoUsuario, String emailUsuario, String userUsuario, String contraseniaUsuario, Set informacionPrincipals) {
       this.ciudad = ciudad;
       this.departamento = departamento;
       this.genero = genero;
       this.roles = roles;
       this.nombreUsuario = nombreUsuario;
       this.apellidoUsuario = apellidoUsuario;
       this.fechaNacimientoUsuario = fechaNacimientoUsuario;
       this.direccionUsuario = direccionUsuario;
       this.barrioUsuario = barrioUsuario;
       this.telefonoUsuario = telefonoUsuario;
       this.emailUsuario = emailUsuario;
       this.userUsuario = userUsuario;
       this.contraseniaUsuario = contraseniaUsuario;
       this.informacionPrincipals = informacionPrincipals;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id_usuario", unique=true, nullable=false)
    public Integer getIdUsuario() {
        return this.idUsuario;
    }
    
    public void setIdUsuario(Integer idUsuario) {
        this.idUsuario = idUsuario;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ciudad_consecutivo_ciudad", nullable=false)
    public Ciudad getCiudad() {
        return this.ciudad;
    }
    
    public void setCiudad(Ciudad ciudad) {
        this.ciudad = ciudad;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="departamento_id_departamento", nullable=false)
    public Departamento getDepartamento() {
        return this.departamento;
    }
    
    public void setDepartamento(Departamento departamento) {
        this.departamento = departamento;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="genero_id_genero", nullable=false)
    public Genero getGenero() {
        return this.genero;
    }
    
    public void setGenero(Genero genero) {
        this.genero = genero;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="roles_id_roles", nullable=false)
    public Roles getRoles() {
        return this.roles;
    }
    
    public void setRoles(Roles roles) {
        this.roles = roles;
    }

    
    @Column(name="nombre_usuario", nullable=false, length=45)
    public String getNombreUsuario() {
        return this.nombreUsuario;
    }
    
    public void setNombreUsuario(String nombreUsuario) {
        this.nombreUsuario = nombreUsuario;
    }

    
    @Column(name="apellido_usuario", nullable=false, length=45)
    public String getApellidoUsuario() {
        return this.apellidoUsuario;
    }
    
    public void setApellidoUsuario(String apellidoUsuario) {
        this.apellidoUsuario = apellidoUsuario;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="fecha_nacimiento_usuario", nullable=false, length=10)
    public Date getFechaNacimientoUsuario() {
        return this.fechaNacimientoUsuario;
    }
    
    public void setFechaNacimientoUsuario(Date fechaNacimientoUsuario) {
        this.fechaNacimientoUsuario = fechaNacimientoUsuario;
    }

    
    @Column(name="direccion_usuario", nullable=false, length=45)
    public String getDireccionUsuario() {
        return this.direccionUsuario;
    }
    
    public void setDireccionUsuario(String direccionUsuario) {
        this.direccionUsuario = direccionUsuario;
    }

    
    @Column(name="barrio_usuario", nullable=false, length=45)
    public String getBarrioUsuario() {
        return this.barrioUsuario;
    }
    
    public void setBarrioUsuario(String barrioUsuario) {
        this.barrioUsuario = barrioUsuario;
    }

    
    @Column(name="telefono_usuario", nullable=false, length=45)
    public String getTelefonoUsuario() {
        return this.telefonoUsuario;
    }
    
    public void setTelefonoUsuario(String telefonoUsuario) {
        this.telefonoUsuario = telefonoUsuario;
    }

    
    @Column(name="email_usuario", nullable=false, length=45)
    public String getEmailUsuario() {
        return this.emailUsuario;
    }
    
    public void setEmailUsuario(String emailUsuario) {
        this.emailUsuario = emailUsuario;
    }

    
    @Column(name="user_usuario", nullable=false, length=45)
    public String getUserUsuario() {
        return this.userUsuario;
    }
    
    public void setUserUsuario(String userUsuario) {
        this.userUsuario = userUsuario;
    }

    
    @Column(name="contrasenia_usuario", nullable=false, length=45)
    public String getContraseniaUsuario() {
        return this.contraseniaUsuario;
    }
    
    public void setContraseniaUsuario(String contraseniaUsuario) {
        this.contraseniaUsuario = contraseniaUsuario;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
    public Set getInformacionPrincipals() {
        return this.informacionPrincipals;
    }
    
    public void setInformacionPrincipals(Set informacionPrincipals) {
        this.informacionPrincipals = informacionPrincipals;
    }




}


