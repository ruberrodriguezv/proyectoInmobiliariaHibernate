package com.inmobiliaria.model;
// Generated 4/03/2015 09:08:20 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * InformacionPrincipal generated by hbm2java
 */
@Entity
@Table(name="informacion_principal"
    ,catalog="inmobiliaria"
)
public class InformacionPrincipal  implements java.io.Serializable {


     private Integer idInformacionPrincipal;
     private Ciudad ciudad;
     private Cocina cocina;
     private Condicion condicion;
     private Departamento departamento;
     private Estado estado;
     private Estrato estrato;
     private Garaje garaje;
     private NumeroAlcobas numeroAlcobas;
     private NumeroBanios numeroBanios;
     private NumeroPlantas numeroPlantas;
     private Parqueadero parqueadero;
     private RangoPreciosAjustado rangoPreciosAjustado;
     private TiempoConstruido tiempoConstruido;
     private TipoInmueble tipoInmueble;
     private TipoOperacion tipoOperacion;
     private TipoPropiedad tipoPropiedad;
     private Usuario usuario;
     private Zona zona;
     private Date fechaRegistroEvento;
     private String enlaceImagen;
     private Set informacionPrincipalHasEspecificacionesVariases = new HashSet(0);

    public InformacionPrincipal() {
    }

	
    public InformacionPrincipal(Ciudad ciudad, Cocina cocina, Condicion condicion, Departamento departamento, Estado estado, Estrato estrato, Garaje garaje, NumeroAlcobas numeroAlcobas, NumeroBanios numeroBanios, NumeroPlantas numeroPlantas, Parqueadero parqueadero, RangoPreciosAjustado rangoPreciosAjustado, TiempoConstruido tiempoConstruido, TipoInmueble tipoInmueble, TipoOperacion tipoOperacion, TipoPropiedad tipoPropiedad, Usuario usuario, Zona zona, Date fechaRegistroEvento, String enlaceImagen) {
        this.ciudad = ciudad;
        this.cocina = cocina;
        this.condicion = condicion;
        this.departamento = departamento;
        this.estado = estado;
        this.estrato = estrato;
        this.garaje = garaje;
        this.numeroAlcobas = numeroAlcobas;
        this.numeroBanios = numeroBanios;
        this.numeroPlantas = numeroPlantas;
        this.parqueadero = parqueadero;
        this.rangoPreciosAjustado = rangoPreciosAjustado;
        this.tiempoConstruido = tiempoConstruido;
        this.tipoInmueble = tipoInmueble;
        this.tipoOperacion = tipoOperacion;
        this.tipoPropiedad = tipoPropiedad;
        this.usuario = usuario;
        this.zona = zona;
        this.fechaRegistroEvento = fechaRegistroEvento;
        this.enlaceImagen = enlaceImagen;
    }
    public InformacionPrincipal(Ciudad ciudad, Cocina cocina, Condicion condicion, Departamento departamento, Estado estado, Estrato estrato, Garaje garaje, NumeroAlcobas numeroAlcobas, NumeroBanios numeroBanios, NumeroPlantas numeroPlantas, Parqueadero parqueadero, RangoPreciosAjustado rangoPreciosAjustado, TiempoConstruido tiempoConstruido, TipoInmueble tipoInmueble, TipoOperacion tipoOperacion, TipoPropiedad tipoPropiedad, Usuario usuario, Zona zona, Date fechaRegistroEvento, String enlaceImagen, Set informacionPrincipalHasEspecificacionesVariases) {
       this.ciudad = ciudad;
       this.cocina = cocina;
       this.condicion = condicion;
       this.departamento = departamento;
       this.estado = estado;
       this.estrato = estrato;
       this.garaje = garaje;
       this.numeroAlcobas = numeroAlcobas;
       this.numeroBanios = numeroBanios;
       this.numeroPlantas = numeroPlantas;
       this.parqueadero = parqueadero;
       this.rangoPreciosAjustado = rangoPreciosAjustado;
       this.tiempoConstruido = tiempoConstruido;
       this.tipoInmueble = tipoInmueble;
       this.tipoOperacion = tipoOperacion;
       this.tipoPropiedad = tipoPropiedad;
       this.usuario = usuario;
       this.zona = zona;
       this.fechaRegistroEvento = fechaRegistroEvento;
       this.enlaceImagen = enlaceImagen;
       this.informacionPrincipalHasEspecificacionesVariases = informacionPrincipalHasEspecificacionesVariases;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id_informacion_principal", unique=true, nullable=false)
    public Integer getIdInformacionPrincipal() {
        return this.idInformacionPrincipal;
    }
    
    public void setIdInformacionPrincipal(Integer idInformacionPrincipal) {
        this.idInformacionPrincipal = idInformacionPrincipal;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ciudad_consecutivo_ciudad", nullable=false)
    public Ciudad getCiudad() {
        return this.ciudad;
    }
    
    public void setCiudad(Ciudad ciudad) {
        this.ciudad = ciudad;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="cocina_id_cocina", nullable=false)
    public Cocina getCocina() {
        return this.cocina;
    }
    
    public void setCocina(Cocina cocina) {
        this.cocina = cocina;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="condicion_id_condicion", nullable=false)
    public Condicion getCondicion() {
        return this.condicion;
    }
    
    public void setCondicion(Condicion condicion) {
        this.condicion = condicion;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="departamento_id_departamento", nullable=false)
    public Departamento getDepartamento() {
        return this.departamento;
    }
    
    public void setDepartamento(Departamento departamento) {
        this.departamento = departamento;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="estado_id_estado", nullable=false)
    public Estado getEstado() {
        return this.estado;
    }
    
    public void setEstado(Estado estado) {
        this.estado = estado;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="estrato_id_estrato", nullable=false)
    public Estrato getEstrato() {
        return this.estrato;
    }
    
    public void setEstrato(Estrato estrato) {
        this.estrato = estrato;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="garaje_id_garaje", nullable=false)
    public Garaje getGaraje() {
        return this.garaje;
    }
    
    public void setGaraje(Garaje garaje) {
        this.garaje = garaje;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="numero_alcobas_id_numero_alcobas", nullable=false)
    public NumeroAlcobas getNumeroAlcobas() {
        return this.numeroAlcobas;
    }
    
    public void setNumeroAlcobas(NumeroAlcobas numeroAlcobas) {
        this.numeroAlcobas = numeroAlcobas;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="numero_banios_id_numero_banios", nullable=false)
    public NumeroBanios getNumeroBanios() {
        return this.numeroBanios;
    }
    
    public void setNumeroBanios(NumeroBanios numeroBanios) {
        this.numeroBanios = numeroBanios;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="numero_plantas_id_numero_plantas", nullable=false)
    public NumeroPlantas getNumeroPlantas() {
        return this.numeroPlantas;
    }
    
    public void setNumeroPlantas(NumeroPlantas numeroPlantas) {
        this.numeroPlantas = numeroPlantas;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="parqueadero_id_parqueadero", nullable=false)
    public Parqueadero getParqueadero() {
        return this.parqueadero;
    }
    
    public void setParqueadero(Parqueadero parqueadero) {
        this.parqueadero = parqueadero;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="rango_precios_ajustado_id_rango_precios_ajustado", nullable=false)
    public RangoPreciosAjustado getRangoPreciosAjustado() {
        return this.rangoPreciosAjustado;
    }
    
    public void setRangoPreciosAjustado(RangoPreciosAjustado rangoPreciosAjustado) {
        this.rangoPreciosAjustado = rangoPreciosAjustado;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="tiempo_construido_id_tiempo_construido", nullable=false)
    public TiempoConstruido getTiempoConstruido() {
        return this.tiempoConstruido;
    }
    
    public void setTiempoConstruido(TiempoConstruido tiempoConstruido) {
        this.tiempoConstruido = tiempoConstruido;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="tipo_inmueble_id_tipo_inmueble", nullable=false)
    public TipoInmueble getTipoInmueble() {
        return this.tipoInmueble;
    }
    
    public void setTipoInmueble(TipoInmueble tipoInmueble) {
        this.tipoInmueble = tipoInmueble;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="tipo_operacion_id_tipo_operacion", nullable=false)
    public TipoOperacion getTipoOperacion() {
        return this.tipoOperacion;
    }
    
    public void setTipoOperacion(TipoOperacion tipoOperacion) {
        this.tipoOperacion = tipoOperacion;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="tipo_propiedad_id_tipo_propiedad", nullable=false)
    public TipoPropiedad getTipoPropiedad() {
        return this.tipoPropiedad;
    }
    
    public void setTipoPropiedad(TipoPropiedad tipoPropiedad) {
        this.tipoPropiedad = tipoPropiedad;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="usuario_id_usuario", nullable=false)
    public Usuario getUsuario() {
        return this.usuario;
    }
    
    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="zona_id_zona", nullable=false)
    public Zona getZona() {
        return this.zona;
    }
    
    public void setZona(Zona zona) {
        this.zona = zona;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fecha_registro_evento", nullable=false, length=19)
    public Date getFechaRegistroEvento() {
        return this.fechaRegistroEvento;
    }
    
    public void setFechaRegistroEvento(Date fechaRegistroEvento) {
        this.fechaRegistroEvento = fechaRegistroEvento;
    }

    
    @Column(name="enlace_imagen", nullable=false, length=70)
    public String getEnlaceImagen() {
        return this.enlaceImagen;
    }
    
    public void setEnlaceImagen(String enlaceImagen) {
        this.enlaceImagen = enlaceImagen;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="informacionPrincipal")
    public Set getInformacionPrincipalHasEspecificacionesVariases() {
        return this.informacionPrincipalHasEspecificacionesVariases;
    }
    
    public void setInformacionPrincipalHasEspecificacionesVariases(Set informacionPrincipalHasEspecificacionesVariases) {
        this.informacionPrincipalHasEspecificacionesVariases = informacionPrincipalHasEspecificacionesVariases;
    }




}


